/*
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.fulfillment.inbound.v0;
using software.amzn.spapi.Model.fulfillment.inbound.v0;

namespace software.amzn.spapi.Api.fulfillment.inbound.v0.Test
{
    /// <summary>
    ///  Class for testing FbaInboundApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class FbaInboundApiTests
    {
        private FbaInboundApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new FbaInboundApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FbaInboundApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FbaInboundApi
            //Assert.IsInstanceOfType(typeof(FbaInboundApi), instance, "instance is a FbaInboundApi");
        }

        
        /// <summary>
        /// Test GetBillOfLading
        /// </summary>
        [Fact]
        public void GetBillOfLadingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //var response = instance.GetBillOfLading(shipmentId);
            //Assert.IsInstanceOf<GetBillOfLadingResponse> (response, "response is GetBillOfLadingResponse");
        }
        
        /// <summary>
        /// Test GetLabels
        /// </summary>
        [Fact]
        public void GetLabelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string pageType = null;
            //string labelType = null;
            //int? numberOfPackages = null;
            //List<string>? packageLabelsToPrint = null;
            //int? numberOfPallets = null;
            //int? pageSize = null;
            //int? pageStartIndex = null;
            //var response = instance.GetLabels(shipmentIdpageTypelabelTypenumberOfPackagespackageLabelsToPrintnumberOfPalletspageSizepageStartIndex);
            //Assert.IsInstanceOf<GetLabelsResponse> (response, "response is GetLabelsResponse");
        }
        
        /// <summary>
        /// Test GetPrepInstructions
        /// </summary>
        [Fact]
        public void GetPrepInstructionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipToCountryCode = null;
            //List<string>? sellerSKUList = null;
            //List<string>? aSINList = null;
            //var response = instance.GetPrepInstructions(shipToCountryCodesellerSKUListaSINList);
            //Assert.IsInstanceOf<GetPrepInstructionsResponse> (response, "response is GetPrepInstructionsResponse");
        }
        
        /// <summary>
        /// Test GetShipmentItems
        /// </summary>
        [Fact]
        public void GetShipmentItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string queryType = null;
            //string marketplaceId = null;
            //DateTime? lastUpdatedAfter = null;
            //DateTime? lastUpdatedBefore = null;
            //string? nextToken = null;
            //var response = instance.GetShipmentItems(queryTypemarketplaceIdlastUpdatedAfterlastUpdatedBeforenextToken);
            //Assert.IsInstanceOf<GetShipmentItemsResponse> (response, "response is GetShipmentItemsResponse");
        }
        
        /// <summary>
        /// Test GetShipmentItemsByShipmentId
        /// </summary>
        [Fact]
        public void GetShipmentItemsByShipmentIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string? marketplaceId = null;
            //var response = instance.GetShipmentItemsByShipmentId(shipmentIdmarketplaceId);
            //Assert.IsInstanceOf<GetShipmentItemsResponse> (response, "response is GetShipmentItemsResponse");
        }
        
        /// <summary>
        /// Test GetShipments
        /// </summary>
        [Fact]
        public void GetShipmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string queryType = null;
            //string marketplaceId = null;
            //List<string>? shipmentStatusList = null;
            //List<string>? shipmentIdList = null;
            //DateTime? lastUpdatedAfter = null;
            //DateTime? lastUpdatedBefore = null;
            //string? nextToken = null;
            //var response = instance.GetShipments(queryTypemarketplaceIdshipmentStatusListshipmentIdListlastUpdatedAfterlastUpdatedBeforenextToken);
            //Assert.IsInstanceOf<GetShipmentsResponse> (response, "response is GetShipmentsResponse");
        }
        
    }

}
