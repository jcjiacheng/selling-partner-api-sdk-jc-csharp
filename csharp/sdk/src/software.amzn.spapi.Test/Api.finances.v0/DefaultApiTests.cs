/*
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.finances.v0;
using software.amzn.spapi.Model.finances.v0;

namespace software.amzn.spapi.Api.finances.v0.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        
        /// <summary>
        /// Test ListFinancialEventGroups
        /// </summary>
        [Fact]
        public void ListFinancialEventGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? maxResultsPerPage = null;
            //DateTime? financialEventGroupStartedBefore = null;
            //DateTime? financialEventGroupStartedAfter = null;
            //string? nextToken = null;
            //var response = instance.ListFinancialEventGroups(maxResultsPerPagefinancialEventGroupStartedBeforefinancialEventGroupStartedAfternextToken);
            //Assert.IsInstanceOf<ListFinancialEventGroupsResponse> (response, "response is ListFinancialEventGroupsResponse");
        }
        
        /// <summary>
        /// Test ListFinancialEvents
        /// </summary>
        [Fact]
        public void ListFinancialEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? maxResultsPerPage = null;
            //DateTime? postedAfter = null;
            //DateTime? postedBefore = null;
            //string? nextToken = null;
            //var response = instance.ListFinancialEvents(maxResultsPerPagepostedAfterpostedBeforenextToken);
            //Assert.IsInstanceOf<ListFinancialEventsResponse> (response, "response is ListFinancialEventsResponse");
        }
        
        /// <summary>
        /// Test ListFinancialEventsByGroupId
        /// </summary>
        [Fact]
        public void ListFinancialEventsByGroupIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventGroupId = null;
            //int? maxResultsPerPage = null;
            //DateTime? postedAfter = null;
            //DateTime? postedBefore = null;
            //string? nextToken = null;
            //var response = instance.ListFinancialEventsByGroupId(eventGroupIdmaxResultsPerPagepostedAfterpostedBeforenextToken);
            //Assert.IsInstanceOf<ListFinancialEventsResponse> (response, "response is ListFinancialEventsResponse");
        }
        
        /// <summary>
        /// Test ListFinancialEventsByOrderId
        /// </summary>
        [Fact]
        public void ListFinancialEventsByOrderIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //int? maxResultsPerPage = null;
            //string? nextToken = null;
            //var response = instance.ListFinancialEventsByOrderId(orderIdmaxResultsPerPagenextToken);
            //Assert.IsInstanceOf<ListFinancialEventsResponse> (response, "response is ListFinancialEventsResponse");
        }
        
    }

}
