/*
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.shipping.v2;
using software.amzn.spapi.Model.shipping.v2;

namespace software.amzn.spapi.Api.shipping.v2.Test
{
    /// <summary>
    ///  Class for testing ShippingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ShippingApiTests
    {
        private ShippingApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new ShippingApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ShippingApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ShippingApi
            //Assert.IsInstanceOfType(typeof(ShippingApi), instance, "instance is a ShippingApi");
        }

        
        /// <summary>
        /// Test CancelShipment
        /// </summary>
        [Fact]
        public void CancelShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.CancelShipment(shipmentIdxAmznShippingBusinessId);
            //Assert.IsInstanceOf<CancelShipmentResponse> (response, "response is CancelShipmentResponse");
        }
        
        /// <summary>
        /// Test CreateClaim
        /// </summary>
        [Fact]
        public void CreateClaimTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateClaimRequest body = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.CreateClaim(bodyxAmznShippingBusinessId);
            //Assert.IsInstanceOf<CreateClaimResponse> (response, "response is CreateClaimResponse");
        }
        
        /// <summary>
        /// Test DirectPurchaseShipment
        /// </summary>
        [Fact]
        public void DirectPurchaseShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DirectPurchaseRequest body = null;
            //string? xAmznIdempotencyKey = null;
            //string? locale = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.DirectPurchaseShipment(bodyxAmznIdempotencyKeylocalexAmznShippingBusinessId);
            //Assert.IsInstanceOf<DirectPurchaseResponse> (response, "response is DirectPurchaseResponse");
        }
        
        /// <summary>
        /// Test GenerateCollectionForm
        /// </summary>
        [Fact]
        public void GenerateCollectionFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateCollectionFormRequest body = null;
            //string? xAmznIdempotencyKey = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.GenerateCollectionForm(bodyxAmznIdempotencyKeyxAmznShippingBusinessId);
            //Assert.IsInstanceOf<GenerateCollectionFormResponse> (response, "response is GenerateCollectionFormResponse");
        }
        
        /// <summary>
        /// Test GetAccessPoints
        /// </summary>
        [Fact]
        public void GetAccessPointsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> accessPointTypes = null;
            //string countryCode = null;
            //string postalCode = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.GetAccessPoints(accessPointTypescountryCodepostalCodexAmznShippingBusinessId);
            //Assert.IsInstanceOf<GetAccessPointsResponse> (response, "response is GetAccessPointsResponse");
        }
        
        /// <summary>
        /// Test GetAdditionalInputs
        /// </summary>
        [Fact]
        public void GetAdditionalInputsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string requestToken = null;
            //string rateId = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.GetAdditionalInputs(requestTokenrateIdxAmznShippingBusinessId);
            //Assert.IsInstanceOf<GetAdditionalInputsResponse> (response, "response is GetAdditionalInputsResponse");
        }
        
        /// <summary>
        /// Test GetCarrierAccountFormInputs
        /// </summary>
        [Fact]
        public void GetCarrierAccountFormInputsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xAmznShippingBusinessId = null;
            //var response = instance.GetCarrierAccountFormInputs(xAmznShippingBusinessId);
            //Assert.IsInstanceOf<GetCarrierAccountFormInputsResponse> (response, "response is GetCarrierAccountFormInputsResponse");
        }
        
        /// <summary>
        /// Test GetCarrierAccounts
        /// </summary>
        [Fact]
        public void GetCarrierAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetCarrierAccountsRequest body = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.GetCarrierAccounts(bodyxAmznShippingBusinessId);
            //Assert.IsInstanceOf<GetCarrierAccountsResponse> (response, "response is GetCarrierAccountsResponse");
        }
        
        /// <summary>
        /// Test GetCollectionForm
        /// </summary>
        [Fact]
        public void GetCollectionFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionFormId = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.GetCollectionForm(collectionFormIdxAmznShippingBusinessId);
            //Assert.IsInstanceOf<GetCollectionFormResponse> (response, "response is GetCollectionFormResponse");
        }
        
        /// <summary>
        /// Test GetCollectionFormHistory
        /// </summary>
        [Fact]
        public void GetCollectionFormHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetCollectionFormHistoryRequest body = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.GetCollectionFormHistory(bodyxAmznShippingBusinessId);
            //Assert.IsInstanceOf<GetCollectionFormHistoryResponse> (response, "response is GetCollectionFormHistoryResponse");
        }
        
        /// <summary>
        /// Test GetRates
        /// </summary>
        [Fact]
        public void GetRatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetRatesRequest body = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.GetRates(bodyxAmznShippingBusinessId);
            //Assert.IsInstanceOf<GetRatesResponse> (response, "response is GetRatesResponse");
        }
        
        /// <summary>
        /// Test GetShipmentDocuments
        /// </summary>
        [Fact]
        public void GetShipmentDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string packageClientReferenceId = null;
            //string? format = null;
            //decimal? dpi = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.GetShipmentDocuments(shipmentIdpackageClientReferenceIdformatdpixAmznShippingBusinessId);
            //Assert.IsInstanceOf<GetShipmentDocumentsResponse> (response, "response is GetShipmentDocumentsResponse");
        }
        
        /// <summary>
        /// Test GetTracking
        /// </summary>
        [Fact]
        public void GetTrackingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trackingId = null;
            //string carrierId = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.GetTracking(trackingIdcarrierIdxAmznShippingBusinessId);
            //Assert.IsInstanceOf<GetTrackingResponse> (response, "response is GetTrackingResponse");
        }
        
        /// <summary>
        /// Test GetUnmanifestedShipments
        /// </summary>
        [Fact]
        public void GetUnmanifestedShipmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetUnmanifestedShipmentsRequest body = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.GetUnmanifestedShipments(bodyxAmznShippingBusinessId);
            //Assert.IsInstanceOf<GetUnmanifestedShipmentsResponse> (response, "response is GetUnmanifestedShipmentsResponse");
        }
        
        /// <summary>
        /// Test LinkCarrierAccount
        /// </summary>
        [Fact]
        public void LinkCarrierAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string carrierId = null;
            //LinkCarrierAccountRequest body = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.LinkCarrierAccount(carrierIdbodyxAmznShippingBusinessId);
            //Assert.IsInstanceOf<LinkCarrierAccountResponse> (response, "response is LinkCarrierAccountResponse");
        }
        
        /// <summary>
        /// Test LinkCarrierAccount_0
        /// </summary>
        [Fact]
        public void LinkCarrierAccount_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string carrierId = null;
            //LinkCarrierAccountRequest body = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.LinkCarrierAccount_0(carrierIdbodyxAmznShippingBusinessId);
            //Assert.IsInstanceOf<LinkCarrierAccountResponse> (response, "response is LinkCarrierAccountResponse");
        }
        
        /// <summary>
        /// Test OneClickShipment
        /// </summary>
        [Fact]
        public void OneClickShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OneClickShipmentRequest body = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.OneClickShipment(bodyxAmznShippingBusinessId);
            //Assert.IsInstanceOf<OneClickShipmentResponse> (response, "response is OneClickShipmentResponse");
        }
        
        /// <summary>
        /// Test PurchaseShipment
        /// </summary>
        [Fact]
        public void PurchaseShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseShipmentRequest body = null;
            //string? xAmznIdempotencyKey = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.PurchaseShipment(bodyxAmznIdempotencyKeyxAmznShippingBusinessId);
            //Assert.IsInstanceOf<PurchaseShipmentResponse> (response, "response is PurchaseShipmentResponse");
        }
        
        /// <summary>
        /// Test SubmitNdrFeedback
        /// </summary>
        [Fact]
        public void SubmitNdrFeedbackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubmitNdrFeedbackRequest body = null;
            //string? xAmznShippingBusinessId = null;
            //instance.SubmitNdrFeedback(bodyxAmznShippingBusinessId);
            
        }
        
        /// <summary>
        /// Test UnlinkCarrierAccount
        /// </summary>
        [Fact]
        public void UnlinkCarrierAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string carrierId = null;
            //UnlinkCarrierAccountRequest body = null;
            //string? xAmznShippingBusinessId = null;
            //var response = instance.UnlinkCarrierAccount(carrierIdbodyxAmznShippingBusinessId);
            //Assert.IsInstanceOf<UnlinkCarrierAccountResponse> (response, "response is UnlinkCarrierAccountResponse");
        }
        
    }

}
