/*
 * The Selling Partner API for third party application integrations.
 *
 * With the AppIntegrations API v2024-04-01, you can send notifications to Amazon Selling Partners and display the notifications in Seller Central.
 *
 * The version of the OpenAPI document: 2024-04-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.appIntegrations.v2024_04_01;
using software.amzn.spapi.Model.appIntegrations.v2024_04_01;

namespace software.amzn.spapi.Api.appIntegrations.v2024_04_01.Test
{
    /// <summary>
    ///  Class for testing AppIntegrationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AppIntegrationsApiTests
    {
        private AppIntegrationsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new AppIntegrationsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AppIntegrationsApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AppIntegrationsApi
            //Assert.IsInstanceOfType(typeof(AppIntegrationsApi), instance, "instance is a AppIntegrationsApi");
        }

        
        /// <summary>
        /// Test CreateNotification
        /// </summary>
        [Fact]
        public void CreateNotificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateNotificationRequest body = null;
            //var response = instance.CreateNotification(body);
            //Assert.IsInstanceOf<CreateNotificationResponse> (response, "response is CreateNotificationResponse");
        }
        
        /// <summary>
        /// Test DeleteNotifications
        /// </summary>
        [Fact]
        public void DeleteNotificationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteNotificationsRequest body = null;
            //instance.DeleteNotifications(body);
            
        }
        
        /// <summary>
        /// Test RecordActionFeedback
        /// </summary>
        [Fact]
        public void RecordActionFeedbackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string notificationId = null;
            //RecordActionFeedbackRequest body = null;
            //instance.RecordActionFeedback(notificationIdbody);
            
        }
        
    }

}
