/*
 * Selling Partner API for Product Type Definitions
 *
 * The Selling Partner API for Product Type Definitions provides programmatic access to attribute and data requirements for product types in the Amazon catalog. Use this API to return the JSON Schema for a product type that you can then use with other Selling Partner APIs, such as the Selling Partner API for Listings Items, the Selling Partner API for Catalog Items, and the Selling Partner API for Feeds (for JSON-based listing feeds).  For more information, see the [Product Type Definitions API Use Case Guide](doc:product-type-api-use-case-guide).
 *
 * The version of the OpenAPI document: 2020-09-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.productTypeDefinitions.v2020_09_01;
using software.amzn.spapi.Model.productTypeDefinitions.v2020_09_01;

namespace software.amzn.spapi.Api.productTypeDefinitions.v2020_09_01.Test
{
    /// <summary>
    ///  Class for testing DefinitionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DefinitionsApiTests
    {
        private DefinitionsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new DefinitionsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefinitionsApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefinitionsApi
            //Assert.IsInstanceOfType(typeof(DefinitionsApi), instance, "instance is a DefinitionsApi");
        }

        
        /// <summary>
        /// Test GetDefinitionsProductType
        /// </summary>
        [Fact]
        public void GetDefinitionsProductTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string productType = null;
            //List<string> marketplaceIds = null;
            //string? sellerId = null;
            //string? productTypeVersion = null;
            //string? requirements = null;
            //string? requirementsEnforced = null;
            //string? locale = null;
            //var response = instance.GetDefinitionsProductType(productTypemarketplaceIdssellerIdproductTypeVersionrequirementsrequirementsEnforcedlocale);
            //Assert.IsInstanceOf<ProductTypeDefinition> (response, "response is ProductTypeDefinition");
        }
        
        /// <summary>
        /// Test SearchDefinitionsProductTypes
        /// </summary>
        [Fact]
        public void SearchDefinitionsProductTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> marketplaceIds = null;
            //List<string>? keywords = null;
            //string? itemName = null;
            //string? locale = null;
            //string? searchLocale = null;
            //var response = instance.SearchDefinitionsProductTypes(marketplaceIdskeywordsitemNamelocalesearchLocale);
            //Assert.IsInstanceOf<ProductTypeList> (response, "response is ProductTypeList");
        }
        
    }

}
