/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 *
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * The version of the OpenAPI document: 2024-05-09
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.awd.v2024_05_09;
using software.amzn.spapi.Model.awd.v2024_05_09;

namespace software.amzn.spapi.Api.awd.v2024_05_09.Test
{
    /// <summary>
    ///  Class for testing AwdApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AwdApiTests
    {
        private AwdApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new AwdApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AwdApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AwdApi
            //Assert.IsInstanceOfType(typeof(AwdApi), instance, "instance is a AwdApi");
        }

        
        /// <summary>
        /// Test CancelInbound
        /// </summary>
        [Fact]
        public void CancelInboundTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //instance.CancelInbound(orderId);
            
        }
        
        /// <summary>
        /// Test CheckInboundEligibility
        /// </summary>
        [Fact]
        public void CheckInboundEligibilityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InboundPackages body = null;
            //var response = instance.CheckInboundEligibility(body);
            //Assert.IsInstanceOf<InboundEligibility> (response, "response is InboundEligibility");
        }
        
        /// <summary>
        /// Test ConfirmInbound
        /// </summary>
        [Fact]
        public void ConfirmInboundTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //instance.ConfirmInbound(orderId);
            
        }
        
        /// <summary>
        /// Test CreateInbound
        /// </summary>
        [Fact]
        public void CreateInboundTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InboundOrderCreationData body = null;
            //var response = instance.CreateInbound(body);
            //Assert.IsInstanceOf<InboundOrderReference> (response, "response is InboundOrderReference");
        }
        
        /// <summary>
        /// Test GetInbound
        /// </summary>
        [Fact]
        public void GetInboundTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //var response = instance.GetInbound(orderId);
            //Assert.IsInstanceOf<InboundOrder> (response, "response is InboundOrder");
        }
        
        /// <summary>
        /// Test GetInboundShipment
        /// </summary>
        [Fact]
        public void GetInboundShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string? skuQuantities = null;
            //var response = instance.GetInboundShipment(shipmentIdskuQuantities);
            //Assert.IsInstanceOf<InboundShipment> (response, "response is InboundShipment");
        }
        
        /// <summary>
        /// Test GetInboundShipmentLabels
        /// </summary>
        [Fact]
        public void GetInboundShipmentLabelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string? pageType = null;
            //string? formatType = null;
            //var response = instance.GetInboundShipmentLabels(shipmentIdpageTypeformatType);
            //Assert.IsInstanceOf<ShipmentLabels> (response, "response is ShipmentLabels");
        }
        
        /// <summary>
        /// Test ListInboundShipments
        /// </summary>
        [Fact]
        public void ListInboundShipmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? sortBy = null;
            //string? sortOrder = null;
            //string? shipmentStatus = null;
            //DateTime? updatedAfter = null;
            //DateTime? updatedBefore = null;
            //int? maxResults = null;
            //string? nextToken = null;
            //var response = instance.ListInboundShipments(sortBysortOrdershipmentStatusupdatedAfterupdatedBeforemaxResultsnextToken);
            //Assert.IsInstanceOf<ShipmentListing> (response, "response is ShipmentListing");
        }
        
        /// <summary>
        /// Test ListInventory
        /// </summary>
        [Fact]
        public void ListInventoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? sku = null;
            //string? sortOrder = null;
            //string? details = null;
            //string? nextToken = null;
            //int? maxResults = null;
            //var response = instance.ListInventory(skusortOrderdetailsnextTokenmaxResults);
            //Assert.IsInstanceOf<InventoryListing> (response, "response is InventoryListing");
        }
        
        /// <summary>
        /// Test UpdateInbound
        /// </summary>
        [Fact]
        public void UpdateInboundTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //InboundOrder body = null;
            //instance.UpdateInbound(orderIdbody);
            
        }
        
        /// <summary>
        /// Test UpdateInboundShipmentTransportDetails
        /// </summary>
        [Fact]
        public void UpdateInboundShipmentTransportDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //TransportationDetails body = null;
            //instance.UpdateInboundShipmentTransportDetails(shipmentIdbody);
            
        }
        
    }

}
