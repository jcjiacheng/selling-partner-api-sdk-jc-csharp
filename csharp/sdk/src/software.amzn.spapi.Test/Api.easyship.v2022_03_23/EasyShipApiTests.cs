/*
 * Selling Partner API for Easy Ship
 *
 * Use the Selling Partner API for Easy Ship to build applications for sellers to manage and ship Amazon Easy Ship orders. With this API, you can get available time slots, schedule and reschedule Easy Ship orders, and print shipping labels, invoices, and warranties. To review the differences in Easy Ship operations by marketplace, refer to [Marketplace support](https://developer-docs.amazon.com/sp-api/docs/easyship-api-v2022-03-23-use-case-guide#marketplace-support).
 *
 * The version of the OpenAPI document: 2022-03-23
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.easyship.v2022_03_23;
using software.amzn.spapi.Model.easyship.v2022_03_23;

namespace software.amzn.spapi.Api.easyship.v2022_03_23.Test
{
    /// <summary>
    ///  Class for testing EasyShipApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class EasyShipApiTests
    {
        private EasyShipApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new EasyShipApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EasyShipApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EasyShipApi
            //Assert.IsInstanceOfType(typeof(EasyShipApi), instance, "instance is a EasyShipApi");
        }

        
        /// <summary>
        /// Test CreateScheduledPackage
        /// </summary>
        [Fact]
        public void CreateScheduledPackageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateScheduledPackageRequest createScheduledPackageRequest = null;
            //var response = instance.CreateScheduledPackage(createScheduledPackageRequest);
            //Assert.IsInstanceOf<Package> (response, "response is Package");
        }
        
        /// <summary>
        /// Test CreateScheduledPackageBulk
        /// </summary>
        [Fact]
        public void CreateScheduledPackageBulkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateScheduledPackagesRequest createScheduledPackagesRequest = null;
            //var response = instance.CreateScheduledPackageBulk(createScheduledPackagesRequest);
            //Assert.IsInstanceOf<CreateScheduledPackagesResponse> (response, "response is CreateScheduledPackagesResponse");
        }
        
        /// <summary>
        /// Test GetScheduledPackage
        /// </summary>
        [Fact]
        public void GetScheduledPackageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //string marketplaceId = null;
            //var response = instance.GetScheduledPackage(amazonOrderIdmarketplaceId);
            //Assert.IsInstanceOf<Package> (response, "response is Package");
        }
        
        /// <summary>
        /// Test ListHandoverSlots
        /// </summary>
        [Fact]
        public void ListHandoverSlotsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ListHandoverSlotsRequest? listHandoverSlotsRequest = null;
            //var response = instance.ListHandoverSlots(listHandoverSlotsRequest);
            //Assert.IsInstanceOf<ListHandoverSlotsResponse> (response, "response is ListHandoverSlotsResponse");
        }
        
        /// <summary>
        /// Test UpdateScheduledPackages
        /// </summary>
        [Fact]
        public void UpdateScheduledPackagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateScheduledPackagesRequest? updateScheduledPackagesRequest = null;
            //var response = instance.UpdateScheduledPackages(updateScheduledPackagesRequest);
            //Assert.IsInstanceOf<Packages> (response, "response is Packages");
        }
        
    }

}
