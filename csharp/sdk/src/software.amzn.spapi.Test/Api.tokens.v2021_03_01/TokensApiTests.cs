/*
 * Selling Partner API for Tokens 
 *
 * The Selling Partner API for Tokens provides a secure way to access a customer's PII (Personally Identifiable Information). You can call the Tokens API to get a Restricted Data Token (RDT) for one or more restricted resources that you specify. The RDT authorizes subsequent calls to restricted operations that correspond to the restricted resources that you specified.  For more information, see the [Tokens API Use Case Guide](doc:tokens-api-use-case-guide).
 *
 * The version of the OpenAPI document: 2021-03-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.tokens.v2021_03_01;
using software.amzn.spapi.Model.tokens.v2021_03_01;

namespace software.amzn.spapi.Api.tokens.v2021_03_01.Test
{
    /// <summary>
    ///  Class for testing TokensApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TokensApiTests
    {
        private TokensApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new TokensApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TokensApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TokensApi
            //Assert.IsInstanceOfType(typeof(TokensApi), instance, "instance is a TokensApi");
        }

        
        /// <summary>
        /// Test CreateRestrictedDataToken
        /// </summary>
        [Fact]
        public void CreateRestrictedDataTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateRestrictedDataTokenRequest body = null;
            //var response = instance.CreateRestrictedDataToken(body);
            //Assert.IsInstanceOf<CreateRestrictedDataTokenResponse> (response, "response is CreateRestrictedDataTokenResponse");
        }
        
    }

}
