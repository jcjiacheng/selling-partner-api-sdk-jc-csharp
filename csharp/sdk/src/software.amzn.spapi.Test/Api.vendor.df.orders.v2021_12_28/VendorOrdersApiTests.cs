/*
 * Selling Partner API for Direct Fulfillment Orders
 *
 * The Selling Partner API for Direct Fulfillment Orders provides programmatic access to a direct fulfillment vendor's order data.
 *
 * The version of the OpenAPI document: 2021-12-28
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.vendor.df.orders.v2021_12_28;
using software.amzn.spapi.Model.vendor.df.orders.v2021_12_28;

namespace software.amzn.spapi.Api.vendor.df.orders.v2021_12_28.Test
{
    /// <summary>
    ///  Class for testing VendorOrdersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class VendorOrdersApiTests
    {
        private VendorOrdersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new VendorOrdersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of VendorOrdersApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' VendorOrdersApi
            //Assert.IsInstanceOfType(typeof(VendorOrdersApi), instance, "instance is a VendorOrdersApi");
        }

        
        /// <summary>
        /// Test GetOrder
        /// </summary>
        [Fact]
        public void GetOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string purchaseOrderNumber = null;
            //var response = instance.GetOrder(purchaseOrderNumber);
            //Assert.IsInstanceOf<Order> (response, "response is Order");
        }
        
        /// <summary>
        /// Test GetOrders
        /// </summary>
        [Fact]
        public void GetOrdersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime createdAfter = null;
            //DateTime createdBefore = null;
            //string? shipFromPartyId = null;
            //string? status = null;
            //long? limit = null;
            //string? sortOrder = null;
            //string? nextToken = null;
            //bool? includeDetails = null;
            //var response = instance.GetOrders(createdAftercreatedBeforeshipFromPartyIdstatuslimitsortOrdernextTokenincludeDetails);
            //Assert.IsInstanceOf<OrderList> (response, "response is OrderList");
        }
        
        /// <summary>
        /// Test SubmitAcknowledgement
        /// </summary>
        [Fact]
        public void SubmitAcknowledgementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubmitAcknowledgementRequest body = null;
            //var response = instance.SubmitAcknowledgement(body);
            //Assert.IsInstanceOf<TransactionId> (response, "response is TransactionId");
        }
        
    }

}
