/*
 * Selling Partner API for Catalog Items
 *
 * Use the Selling Partner API for Catalog Items to retrieve information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-04-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.catalogItems.v2022_04_01;
using software.amzn.spapi.Model.catalogItems.v2022_04_01;

namespace software.amzn.spapi.Api.catalogItems.v2022_04_01.Test
{
    /// <summary>
    ///  Class for testing CatalogApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CatalogApiTests
    {
        private CatalogApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new CatalogApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CatalogApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CatalogApi
            //Assert.IsInstanceOfType(typeof(CatalogApi), instance, "instance is a CatalogApi");
        }

        
        /// <summary>
        /// Test GetCatalogItem
        /// </summary>
        [Fact]
        public void GetCatalogItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string asin = null;
            //List<string> marketplaceIds = null;
            //List<string>? includedData = null;
            //string? locale = null;
            //var response = instance.GetCatalogItem(asinmarketplaceIdsincludedDatalocale);
            //Assert.IsInstanceOf<Item> (response, "response is Item");
        }
        
        /// <summary>
        /// Test SearchCatalogItems
        /// </summary>
        [Fact]
        public void SearchCatalogItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> marketplaceIds = null;
            //List<string>? identifiers = null;
            //string? identifiersType = null;
            //List<string>? includedData = null;
            //string? locale = null;
            //string? sellerId = null;
            //List<string>? keywords = null;
            //List<string>? brandNames = null;
            //List<string>? classificationIds = null;
            //int? pageSize = null;
            //string? pageToken = null;
            //string? keywordsLocale = null;
            //var response = instance.SearchCatalogItems(marketplaceIdsidentifiersidentifiersTypeincludedDatalocalesellerIdkeywordsbrandNamesclassificationIdspageSizepageTokenkeywordsLocale);
            //Assert.IsInstanceOf<ItemSearchResults> (response, "response is ItemSearchResults");
        }
        
    }

}
