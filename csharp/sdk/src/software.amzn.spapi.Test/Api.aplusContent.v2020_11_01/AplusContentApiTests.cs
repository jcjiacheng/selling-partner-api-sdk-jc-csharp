/*
 * Selling Partner API for A+ Content Management
 *
 * Use the A+ Content API to build applications that help selling partners add rich marketing content to their Amazon product detail pages. Selling partners can use A+ content to share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners use content modules to add images and text.
 *
 * The version of the OpenAPI document: 2020-11-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.aplusContent.v2020_11_01;
using software.amzn.spapi.Model.aplusContent.v2020_11_01;

namespace software.amzn.spapi.Api.aplusContent.v2020_11_01.Test
{
    /// <summary>
    ///  Class for testing AplusContentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AplusContentApiTests
    {
        private AplusContentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new AplusContentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AplusContentApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AplusContentApi
            //Assert.IsInstanceOfType(typeof(AplusContentApi), instance, "instance is a AplusContentApi");
        }

        
        /// <summary>
        /// Test CreateContentDocument
        /// </summary>
        [Fact]
        public void CreateContentDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceId = null;
            //PostContentDocumentRequest postContentDocumentRequest = null;
            //var response = instance.CreateContentDocument(marketplaceIdpostContentDocumentRequest);
            //Assert.IsInstanceOf<PostContentDocumentResponse> (response, "response is PostContentDocumentResponse");
        }
        
        /// <summary>
        /// Test GetContentDocument
        /// </summary>
        [Fact]
        public void GetContentDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //List<string> includedDataSet = null;
            //var response = instance.GetContentDocument(contentReferenceKeymarketplaceIdincludedDataSet);
            //Assert.IsInstanceOf<GetContentDocumentResponse> (response, "response is GetContentDocumentResponse");
        }
        
        /// <summary>
        /// Test ListContentDocumentAsinRelations
        /// </summary>
        [Fact]
        public void ListContentDocumentAsinRelationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //List<string>? includedDataSet = null;
            //List<string>? asinSet = null;
            //string? pageToken = null;
            //var response = instance.ListContentDocumentAsinRelations(contentReferenceKeymarketplaceIdincludedDataSetasinSetpageToken);
            //Assert.IsInstanceOf<ListContentDocumentAsinRelationsResponse> (response, "response is ListContentDocumentAsinRelationsResponse");
        }
        
        /// <summary>
        /// Test PostContentDocumentApprovalSubmission
        /// </summary>
        [Fact]
        public void PostContentDocumentApprovalSubmissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //var response = instance.PostContentDocumentApprovalSubmission(contentReferenceKeymarketplaceId);
            //Assert.IsInstanceOf<PostContentDocumentApprovalSubmissionResponse> (response, "response is PostContentDocumentApprovalSubmissionResponse");
        }
        
        /// <summary>
        /// Test PostContentDocumentAsinRelations
        /// </summary>
        [Fact]
        public void PostContentDocumentAsinRelationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //PostContentDocumentAsinRelationsRequest postContentDocumentAsinRelationsRequest = null;
            //var response = instance.PostContentDocumentAsinRelations(contentReferenceKeymarketplaceIdpostContentDocumentAsinRelationsRequest);
            //Assert.IsInstanceOf<PostContentDocumentAsinRelationsResponse> (response, "response is PostContentDocumentAsinRelationsResponse");
        }
        
        /// <summary>
        /// Test PostContentDocumentSuspendSubmission
        /// </summary>
        [Fact]
        public void PostContentDocumentSuspendSubmissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //var response = instance.PostContentDocumentSuspendSubmission(contentReferenceKeymarketplaceId);
            //Assert.IsInstanceOf<PostContentDocumentSuspendSubmissionResponse> (response, "response is PostContentDocumentSuspendSubmissionResponse");
        }
        
        /// <summary>
        /// Test SearchContentDocuments
        /// </summary>
        [Fact]
        public void SearchContentDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceId = null;
            //string? pageToken = null;
            //var response = instance.SearchContentDocuments(marketplaceIdpageToken);
            //Assert.IsInstanceOf<SearchContentDocumentsResponse> (response, "response is SearchContentDocumentsResponse");
        }
        
        /// <summary>
        /// Test SearchContentPublishRecords
        /// </summary>
        [Fact]
        public void SearchContentPublishRecordsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceId = null;
            //string asin = null;
            //string? pageToken = null;
            //var response = instance.SearchContentPublishRecords(marketplaceIdasinpageToken);
            //Assert.IsInstanceOf<SearchContentPublishRecordsResponse> (response, "response is SearchContentPublishRecordsResponse");
        }
        
        /// <summary>
        /// Test UpdateContentDocument
        /// </summary>
        [Fact]
        public void UpdateContentDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //PostContentDocumentRequest postContentDocumentRequest = null;
            //var response = instance.UpdateContentDocument(contentReferenceKeymarketplaceIdpostContentDocumentRequest);
            //Assert.IsInstanceOf<PostContentDocumentResponse> (response, "response is PostContentDocumentResponse");
        }
        
        /// <summary>
        /// Test ValidateContentDocumentAsinRelations
        /// </summary>
        [Fact]
        public void ValidateContentDocumentAsinRelationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceId = null;
            //PostContentDocumentRequest postContentDocumentRequest = null;
            //List<string>? asinSet = null;
            //var response = instance.ValidateContentDocumentAsinRelations(marketplaceIdpostContentDocumentRequestasinSet);
            //Assert.IsInstanceOf<ValidateContentDocumentAsinRelationsResponse> (response, "response is ValidateContentDocumentAsinRelationsResponse");
        }
        
    }

}
